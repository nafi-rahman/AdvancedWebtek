{"ast":null,"code":"var _jsxFileName = \"E:\\\\code\\\\WEBTEK\\\\AdvancedWebtek\\\\APWT_TASK-6\\\\website-test\\\\src\\\\components\\\\modal.js\";\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      open: false,\n      stationNumber: null,\n      stationData: [{\n        id: 1,\n        number: \"1\"\n      }, {\n        id: 2,\n        number: \"2\"\n      }, {\n        id: 3,\n        number: \"3\"\n      }]\n    };\n\n    this.handleOpen = stationNumber => () => {\n      // get which button was pressed via `stationNumber`\n      // open the modal and set the `stationNumber` state to that argument\n      this.setState({\n        open: true,\n        stationNumber: stationNumber\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      stationData\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      square: true,\n      elevation: 0,\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, stationData.map((station, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: styles.button // pass which button was clicked as an argument\n      ,\n      onClick: this.handleOpen(station.number),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, station.number)))), /*#__PURE__*/React.createElement(Modal, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.modal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, this.state.stationNumber))));\n  }\n\n}","map":{"version":3,"sources":["E:/code/WEBTEK/AdvancedWebtek/APWT_TASK-6/website-test/src/components/modal.js"],"names":["Dashboard","React","Component","state","open","stationNumber","stationData","id","number","handleOpen","setState","handleClose","render","styles","wrapper","body","container","map","station","index","button","modal"],"mappings":";;AAAA,MAAMA,SAAN,SAAwBC,KAAK,CAACC,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,aAAa,EAAE,IAFT;AAGNC,MAAAA,WAAW,EAAE,CACX;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,MAAM,EAAE;AAAjB,OADW,EAEX;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,MAAM,EAAE;AAAjB,OAFW,EAGX;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,MAAM,EAAE;AAAjB,OAHW;AAHP,KAD4B;;AAAA,SAWpCC,UAXoC,GAWvBJ,aAAa,IAAI,MAAM;AAClC;AACA;AACA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,aAAa,EAAEA;AAA7B,OAAd;AACD,KAfmC;;AAAA,SAiBpCM,WAjBoC,GAiBtB,MAAM;AAClB,WAAKD,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAnBmC;AAAA;;AAoBpCQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAkB,KAAKH,KAA7B;AAEA,wBACE;AAAK,MAAA,KAAK,EAAEU,MAAM,CAACC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAED,MAAM,CAACE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAc,MAAA,SAAS,EAAE,CAAzB;AAA4B,MAAA,KAAK,EAAEF,MAAM,CAACG,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,WAAW,CAACW,GAAZ,CAAgB,CAACC,OAAD,EAAUC,KAAV,kBACf;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,KAAK,EAAEN,MAAM,CAACO,MAHhB,CAIE;AAJF;AAKE,MAAA,OAAO,EAAE,KAAKX,UAAL,CAAgBS,OAAO,CAACV,MAAxB,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGU,OAAO,CAACV,MAPX,CADF,CADD,CADH,CADF,eAkBE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,IAAxB;AAA8B,MAAA,OAAO,EAAE,KAAKO,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,KAAK,EAAEE,MAAM,CAACQ,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKlB,KAAL,CAAWE,aAAtC,CAFF,CAlBF,CADF,CADF;AA2BD;;AAlDmC","sourcesContent":["class Dashboard extends React.Component {\r\n    state = {\r\n      open: false,\r\n      stationNumber: null,\r\n      stationData: [\r\n        { id: 1, number: \"1\" },\r\n        { id: 2, number: \"2\" },\r\n        { id: 3, number: \"3\" }\r\n      ]\r\n    };\r\n  \r\n    handleOpen = stationNumber => () => {\r\n      // get which button was pressed via `stationNumber`\r\n      // open the modal and set the `stationNumber` state to that argument\r\n      this.setState({ open: true, stationNumber: stationNumber });\r\n    };\r\n  \r\n    handleClose = () => {\r\n      this.setState({ open: false });\r\n    };\r\n    render() {\r\n      const { stationData } = this.state;\r\n  \r\n      return (\r\n        <div style={styles.wrapper}>\r\n          <div style={styles.body}>\r\n            <Paper square elevation={0} style={styles.container}>\r\n              {stationData.map((station, index) => (\r\n                <div key={index}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={styles.button}\r\n                    // pass which button was clicked as an argument\r\n                    onClick={this.handleOpen(station.number)}\r\n                  >\r\n                    {station.number}\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </Paper>\r\n  \r\n            {/* add only one modal */}\r\n            <Modal open={this.state.open} onClose={this.handleClose}>\r\n              {/* display the content based on newly set state */}\r\n              <div style={styles.modal}>{this.state.stationNumber}</div>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}